class KeypairsController < ApplicationController
  before_action :set_keypair, only: [:show, :edit, :update, :destroy, :export_private, :export_public]

  # GET /keypairs
  def index
    @keypairs = Keypair.all
  end

  # GET /keypairs/1
  def show
  end

  # GET /keypairs/new
  def new
    @keypair = Keypair.new
  end

  # GET /keypairs/1/edit
  def edit
  end
  
  # GET /keypairs/autogenerate
  def autogenerate
    # load autogenerated_keysize-setting from settings model
    @keysize = Setting.find_by name: 'autogenerated_keysize'
  end

  # POST /keypairs
  def create
    @keypair = Keypair.new(keypair_params)
    if @keypair.save
      redirect_to keypairs_url, notice: 'Keypair was successfully created.'
    else
      render :new
    end
  end

  # PATCH/PUT /keypairs/1
  def update
    if @keypair.update(keypair_params)
      redirect_to keypairs_url, notice: 'Keypair was successfully updated.'
    else
      render :edit
    end
  end

  # DELETE /keypairs/1
  def destroy
      if @keypair.destroy
        redirect_to keypairs_url, notice: 'Keypair was successfully destroyed.'
      else
        redirect_to keypairs_url, alert: 'Unable to delete keypair. ' + @keypair.errors[:base].to_s
      end
  end

  # GET /keypairs/1/export_private
  def export_private
    send_data @keypair.privatekey, filename: 'privatekey.txt', type:'text/plain', disposition:'attachment'
  end

  # GET /keypairs/1/export_pubic
  def export_public
    send_data @keypair.publickey, filename: 'publickey.txt', type:'text/plain', disposition:'attachment'
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_keypair
      @keypair = Keypair.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def keypair_params
      params.require(:keypair).permit(:name, :privatekey, :publickey)
    end
end
